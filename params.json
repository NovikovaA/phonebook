{"name":"Phonebook","tagline":"java/groovy project","body":"# Архитектура\r\n\r\nТребуется подумать над архитектурой учебного проекта, а именно подумать, какие варианты использования могут быть у этого приложения, какие действия и в какой последовательности будут выполняться в каждом из вариантов использования, как эти действия могут быть отражены в объектной модели нашего приложения.\r\n\r\nДля лучшего понимания проектирования рекомендую ознакомиться с кратким обзором [паттернов проектирования](http://habrahabr.ru/post/210288/) и [книгой](http://www.books.ru/books/priemy-obektno-orientirovannogo-proektirovaniya-patterny-proektirovaniya-8451/?show=1) для более детального изучения.\r\n\r\n# Git\r\n\r\nКроме того, необходимо ознакомиться с этими двумя статьями: [статья 1](http://habrahabr.ru/post/123111/) и [статья 2](http://dev-lab.info/2013/08/%D1%88%D0%BF%D0%B0%D1%80%D0%B3%D0%B0%D0%BB%D0%BA%D0%B0-%D0%BF%D0%BE-git-%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%BD%D1%8B%D0%B5-%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4%D1%8B-%D1%81%D0%BB%D0%B8%D1%8F%D0%BD/), а также с [интерактивной обучалкой по git](http://habrahabr.ru/post/169743/), и сделать отдельную ветку от текущего проекта в своем форке, а затем слить сделанные в ветке изменения с основным бранчем.\r\n\r\nПо шагам это будет выглядеть следующим образом:\r\n\r\n1. Переходим по адресу нашего проекта [тут](https://github.com/rgordeev/phonebook)\r\n\r\n2. Копируем ссылку из поля HTTPS clone URL\r\n\r\n3. Открываем окно терминала и в директории, где хранятся наши проекты, выполняем команду \r\n `git clone https://github.com/rgordeev/phonebook.git`  \r\n\r\n4. Затем опять переходим на страницу проекта на [github](https://github.com/rgordeev/phonebook) и делаем форк, нажав на кнопку в правом верхнем углу (для этого требуется регистрация на github)\r\n\r\n5. Переходим в терминале в директорию в которую мы склонировали проект и выполняем в нем команду\r\n`git remote add <произвольный алиас, например myrepo> <url адрес форка, расположенного уже на своей странице>`\r\n\r\n6. Выполняем команду `git remote -v` чтобы убедиться, что все было корректно добавлено. Должны будем увидеть нечто, похожее на\r\n`origin  https://github.com/rgordeev/phonebook.git\r\n<указанный алиас, например myrepo>  git://github.com/<имя выбранное Вами при регистрации на github>/phonebook.git`\r\n\r\nДля более детального ознакомления с git советую почитать [книгу](http://git-scm.com/book/ru) \r\n\r\nСоответственно задание по git заключается в \r\n\r\n1. Создании дополнительной ветки в клонированном репозитории\r\n\r\n2. Внесении произвольных изменений в код проекта\r\n\r\n3. Коммите этих изменений в ветку\r\n\r\n4. Слиянии ветки с основным бранчем master.\r\n\r\n# Gradle\r\n\r\nВ задании по Gradle требуется в текущий проект добавить зависимость от библиотеки [Apache commons lang](http://commons.apache.org/proper/commons-lang/) и реализовать медот equals класса Person, используя статический медот StringUtils.equals(str1, str2) класса StringUtils из добавленной библиотеки.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}